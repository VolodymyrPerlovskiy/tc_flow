<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="cf1c05f2-ba5d-460d-8cfa-84129ba9fb1d" xsi:noNamespaceSchemaLocation="http://www.jetbrains.com/teamcity/schemas/2018.1/project-config.xsd">
  <name>feature/multi-factor</name>
  <description />
  <settings>
    <disabled-settings>
      <setting-ref ref="RUNNER_2" />
    </disabled-settings>
    <parameters>
      <param name="env.app_name" value="%maven.project.name%-%maven.project.version%" />
      <param name="env.branch" value="feature" />
      <param name="env.deployment_server" value="ddigitapu02.alfa.bank.int" />
      <param name="env.http_server_port" value="58091" />
      <param name="env.project" value="auth-server" />
      <param name="env.server_port" value="58092" />
      <param name="env.team" value="5_dev_ops" />
      <param name="env.user_password" value="credentialsJSON:3d6bd1f6-76da-4ffc-8ee3-8f376fc39db3" spec="password display='normal'" />
      <param name="env.username" value="v.perlovskiy" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_1" name="clean-install-with-deploy-profile" type="Maven2">
        <parameters>
          <param name="goals" value="clean install -DskipTests=true" />
          <param name="maven.path" value="%teamcity.tool.maven3_3%" />
          <param name="pomLocation" value="pom.xml" />
          <param name="runnerArgs" value="-P withDeploy" />
          <param name="teamcity.coverage.emma.include.source" value="true" />
          <param name="teamcity.coverage.emma.instr.parameters" value="-ix -*Test*" />
          <param name="teamcity.coverage.idea.includePatterns" value="*" />
          <param name="teamcity.coverage.jacoco.patterns" value="+:*" />
          <param name="teamcity.step.mode" value="default" />
          <param name="teamcity.tool.jacoco" value="%teamcity.tool.jacoco.DEFAULT%" />
          <param name="userSettingsSelection" value="userSettingsSelection:default" />
        </parameters>
      </runner>
      <runner id="RUNNER_2" name="sonar" type="Maven2">
        <parameters>
          <param name="goals" value="sonar:sonar" />
          <param name="maven.path" value="%teamcity.tool.maven3_3%" />
          <param name="pomLocation" value="pom.xml" />
          <param name="runnerArgs" value="-Dsonar.host.url=%env.SONAR_URL%" />
          <param name="teamcity.coverage.emma.include.source" value="true" />
          <param name="teamcity.coverage.emma.instr.parameters" value="-ix -*Test*" />
          <param name="teamcity.coverage.idea.includePatterns" value="*" />
          <param name="teamcity.coverage.jacoco.patterns" value="+:*" />
          <param name="teamcity.step.mode" value="default" />
          <param name="teamcity.tool.jacoco" value="%teamcity.tool.jacoco.DEFAULT%" />
          <param name="userSettingsSelection" value="userSettingsSelection:default" />
        </parameters>
      </runner>
      <runner id="RUNNER_3" name="Copy artifact, conf files and start service" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/bin/bash
echo "Update OS repo"
apt update && apt-get -f install sshpass gcp
# Add a user to Linux system
adduser --gecos "First Last,RoomNumber,WorkPhone,HomePhone" --disabled-password --force-badname
echo "Switch user"
su - %env.username% -c 'rm -f /home/%env.username%/.ssh/*'
echo "Generate key pair"
su - %env.username% -c 'ssh-keygen -t rsa -f /home/%env.username%/.ssh/id_rsa -q -P ""'
echo "Copy ssh key to remote server"
su - %env.username% -c 'sshpass -p "%env.user_password%" ssh-copy-id -o StrictHostKeyChecking=no %env.username%@%env.deployment_server%'
echo "Create folders for service deployment as sudo user"
su - %env.username% -c 'ssh -T -o "StrictHostKeyChecking=no" "%env.username%@%env.deployment_server%"' <<'ENDSSH'
sudo su - sab
echo $USER
echo %env.app_name%
mkdir -p /app/uat/%env.team%/%env.project%
mkdir -p /app/uat/%env.team%/%env.project%/%env.branch%/
ENDSSH
echo "Create folders structure in maintainer home directory"
su - %env.username% -c 'ssh -T -o "StrictHostKeyChecking=no" "%env.username%@%env.deployment_server%"' <<'ENDSSH'
mkdir -p /home/%env.username%/%env.project%/%env.branch%
mkdir -p /home/%env.username%/%env.project%/%env.branch%/config
mkdir -p /home/%env.username%/%env.project%/%env.branch%/public
ENDSSH
echo "Secure copy artefact to ENV server"
su - %env.username% -c 'scp -rp "%teamcity.build.checkoutDir%/assembly/%env.app_name%/"'*'".jar" %env.username%@%env.deployment_server%:"/home/%env.username%/%env.project%/%env.branch%"'
su - %env.username% -c 'scp -rp "/opt/buildagent/work/"'*'".sh" %env.username%@%env.deployment_server%:"/home/%env.username%/%env.project%/%env.branch%"'
su - %env.username% -c 'scp -rp "%teamcity.build.checkoutDir%/config" %env.username%@%env.deployment_server%:"/home/%env.username%/%env.project%/%env.branch%/"'
su - %env.username% -c 'scp -rp "%teamcity.build.checkoutDir%/public" %env.username%@%env.deployment_server%:"/home/%env.username%/%env.project%/%env.branch%/"'
echo "Move artifact and config files into target directory"
su - %env.username% -c 'ssh -T -o "StrictHostKeyChecking=no" "%env.username%@%env.deployment_server%"' <<'ENDSSH'
sudo su - sab
echo $USER
cp -rf /home/%env.username%/%env.project%/%env.branch%/* /app/uat/%env.team%/%env.project%/%env.branch%/
sh /app/uat/%env.team%/%env.project%/%env.branch%/auth.sh stop
sh /app/uat/%env.team%/%env.project%/%env.branch%/auth.sh start 58092 58091
ENDSSH]]></param>
          <param name="teamcity.build.workingDir" value="%teamcity.agent.work.dir%" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_4" name="Clean after deployment" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/bin/bash
echo "Post service deployment clean ..."
su - %env.username% -c 'ssh -o "StrictHostKeyChecking=no" "%env.username%@%env.deployment_server%"' <<'ENDSSH'
echo $USER
rm -r /home/%env.username%/%env.project%
rm -r /home/%env.username%/.ssh/
ENDSSH]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="AuthServer_FeatureMultiFactor" />
    </vcs-settings>
    <requirements />
    <build-triggers>
      <build-trigger id="vcsTrigger" type="vcsTrigger">
        <parameters>
          <param name="enableQueueOptimization" value="true" />
          <param name="quietPeriodMode" value="DO_NOT_USE" />
        </parameters>
      </build-trigger>
    </build-triggers>
    <cleanup />
  </settings>
</build-type>

